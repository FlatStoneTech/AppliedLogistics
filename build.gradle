apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'com.matthewprenger.cursegradle'

apply from: 'gradle/scripts/dependencies.gradle'
apply from: 'gradle/scripts/integration.gradle'
apply from: 'gradle/scripts/artifacts.gradle'
apply from: 'gradle/scripts/optional.gradle'

// For those who want the bleeding edge
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
        classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.0.7"
    }
}

configurations.all {
    resolutionStrategy.cacheDynamicVersionsFor 7200, 'hours'
}

sourceCompatibility = JavaVersion.VERSION_1_6
targetCompatibility = JavaVersion.VERSION_1_6

ext {
    curseApiKey = ""
    curseReleaseType = "alpha"
}

version = minecraft_version + "-" + "b" + cibuild + "-univeral"
archivesBaseName = cibasename

// If TeamCity is running this build, lets set the version info
if (hasProperty("teamcity")) {
    version = minecraft_version + "-" + teamcity["build.number"] + "-universal"

    // Fix for main branch being built
    version = version.replaceAll("/", "-")

    curseApiKey = teamcity["apiKey"]
    curseReleaseType = teamcity["releaseType"]
}

minecraft {
    version = minecraft_version + "-" + forge_version

    replaceIn "ModInfo.java"

    replace "@VERSION@", project.version
    replace "@MCVERSION@", minecraft_version

    runDir = "run"
    mappings = "stable_20"
}

processResources
        {
            // this will ensure that this task is redone when the versions change.
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'

                // replace version and mcversion
                expand 'version':project.version, 'mcversion':project.minecraft.version
            }

            // copy everything else, thats not the mcmod.info
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
        }

// Add Access Transformers Manifest
jar {
    manifest {
        attributes 'FMLAT': 'AppliedLogistics_at.cfg'
    }
}

curseforge {
    apiKey = curseApiKey
    project {
        releaseType = curseReleaseType
        id = "241427"
        changelog = file("build/libs/changelog.txt")
        addGameVersion minecraft_version
        addArtifact devJar
    }
}
